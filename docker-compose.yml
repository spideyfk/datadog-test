# For more information: https://laravel.com/docs/sail
version: '3'
services:
    sleep.app.dd:
        container_name: sleep-api-dd
        build:  
            context: ./docker
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP:-1000}'     
        image: sail-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '80:80'
            - '443:443'
        environment:
            DD_AGENT_HOST: 'dd-agent'
            DATADOG_HOST: 'datadog'    
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            DD_SERVICE: 'sleep-app-dd'
            DD_ENV: 'dev'
            DD_VERSION: 1
            DD_TRACE_DEBUG: true
            DD_TRACE_LOG_FILE: '/var/www/html/storage/logs/dd-trace.log'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mariadb
            - redis
    mariadb:
        platform: linux/x86_64
        image: 'mariadb:10'
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - '${FORWARD_DB_PORT:-33060}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-morpheus}'
            MYSQL_DATABASE: '${DB_DATABASE:-hypnos}'
            MYSQL_USER: '${DB_USERNAME:-morpheus}'
            MYSQL_PASSWORD: '${DB_PASSWORD:-morpheus}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-morpheus}"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    datadog:
        container_name: dd-agent
        image: 'gcr.io/datadoghq/agent:7'
        links:
           - sleep.app.dd
        environment:
           - DD_API_KEY=ee648ac126c07688abf3f83cca0603b8
           - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true # enables agent to receive custom metrics from other containers
           - DD_APM_ENABLED=true # enables tracing
           - DD_APM_NON_LOCAL_TRAFFIC=true # enables agent to receive traces from other containers
           - DD_AGENT_HOST=dd-agent # allows web container to forward traces to agent
           - DATADOG_HOST=datadog 
           - DD_SITE=us5.datadoghq.com # determines datadog instance to send data to (e.g change to datadoghq.eu for EU1)
           - DD_REMOTE_CONFIGURATION_ENABLED=false
        volumes:
           - /var/run/docker.sock:/var/run/docker.sock
           - /proc/:/host/proc/:ro
           - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
        networks:
           - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-mariadb:
        driver: local
    sail-redis:
        driver: local
